@page "/users"
@using AntDesign.TableModels
@using Shared.Members

<Breadcrumb>
    <BreadcrumbItem>Người dùng</BreadcrumbItem>
    <BreadcrumbItem>Khách hàng</BreadcrumbItem>
</Breadcrumb>
<br/>
<Flex Justify="FlexJustify.End" Gap="@("10")" Style="margin-bottom: 16px;">
@*     <Input Placeholder="Tìm kiếm theo họ tên" @bind-Value="@memberSearch" OnChange="async () => await LoadMembers()" Style="width: 200px;" /> *@
</Flex>

<Table TItem="MemberDTO"
       DataSource="@members"
       PageSize="@memberPageSize"
       Total="@_total"
       @ref="_table"
       RowKey="m => m.Id.ToString()"
       @bind-PageIndex="@memberPageNumber"
       OnChange="OnTableChange">
    <PropertyColumn Property="m => m.Avatar" Title="">
        <Avatar Size="@("3rem")" Src="@context.Avatar" />
    </PropertyColumn>
    <PropertyColumn Property="m => m.FullName" Title="Họ tên" Sortable>
        @(context.FullName ?? "Chưa cập nhật")
    </PropertyColumn>
    <PropertyColumn Property="m => m.Email" Title="Email" Sortable>
        @(context.Email ?? "Chưa cập nhật")
    </PropertyColumn>
    <PropertyColumn Property="m => m.PhoneNumber" Title="Số điện thoại">
        @(context.PhoneNumber ?? "Chưa cập nhật")
    </PropertyColumn>
    <PropertyColumn Property="m => m.Gender" Title="Giới tính">
        @(context.Gender ?? "Chưa cập nhật")
    </PropertyColumn>
    <PropertyColumn Property="m => m.DoB" Title="Ngày sinh">
        @(context.DoB.HasValue ? context.DoB.Value.ToString("yyyy-MM-dd") : "Chưa cập nhật")
    </PropertyColumn>
    <PropertyColumn Property="m => m.Address" Title="Địa chỉ">
        @(context.Address ?? "Chưa cập nhật")
    </PropertyColumn>
    <PropertyColumn Property="m => m.Point" Title="Điểm tích lũy">
        @(context.Point)
    </PropertyColumn>
    <ActionColumn Align="ColumnAlign.Right" Title="">
        <Space Size="SpaceSize.Middle">
            <SpaceItem>
                <Button Icon="@IconType.Outline.Lock"></Button>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>

@code {
    ITable _table;
    private List<MemberDTO> members = new();
    private int _total;
    private string memberSearch = "";
    private int memberPageNumber = 1;
    private int memberPageSize = 10;

    [Inject] MembersService MembersService { get; set; }
    [Inject] IMessageService MessageService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadMembers();
    }

    private async Task LoadMembers()
    {
        try
        {
            var result = await MembersService.GetMembersAsync();
            if (result != null)
            {
                members = result;
                _total = result.Count; // Cần backend trả về tổng số thực tế nếu muốn phân trang chính xác
            }
            else
            {
                members = new List<MemberDTO>();
                _total = 0;
            }
        }
        catch (Exception ex)
        {
            await MessageService.Error($"Lỗi khi tải danh sách thành viên: {ex.Message}");
        }
        StateHasChanged();
    }

    private async Task OnTableChange(QueryModel<MemberDTO> queryModel)
    {
        memberPageNumber = queryModel.PageIndex;
        memberPageSize = queryModel.PageSize;
    }
}