@* @page "/login" *@
@* @using Shared.Auth *@
@* @inject NavigationManager Navigation *@
@* @inject HttpClient Http *@
@* @inject IJSRuntime JS *@

@* <h3>Đăng nhập bằng Google hoặc Facebook</h3> *@
@* <button @onclick="LoginViaGoogle">Đăng nhập bằng Google</button> *@
@* <button @onclick="LoginViaFacebook">Đăng nhập bằng Facebook</button> *@
@* <!-- Đăng nhập bằng Password --> *@
@* <div> *@
@*     <h4>Đăng nhập bằng Email và Mật khẩu</h4> *@
@*     <input type="email" @bind="email" placeholder="Email" /> *@
@*     <input type="password" @bind="password" placeholder="Mật khẩu" /> *@
@*     <button @onclick="LoginViaPassword">Đăng nhập</button> *@
@*     <p>@message</p> *@
@* </div> *@

@* <p>Chưa có tài khoản? <a href="/register">Đăng ký ngay</a></p> *@
@* @code { *@
@*     private bool _isInitialized = false; *@
@*     private string GGclientId = "568380109802-dtu6hse617l9bs7dg0tn9me2fl3tvau4.apps.googleusercontent.com"; *@
@*     private string GGredirectUri = "https://localhost:7000/google-callback";  *@
@*     private string FBredirectUri = "https://localhost:7000/facebook-callback"; *@
@*     private string FBAppId = "1293858475171011"; *@
@*     private string email = ""; *@
@*     private string password = ""; *@
@*     private string message = ""; *@

@*     protected async override Task OnInitializedAsync() *@
@*     { *@
@*         _isInitialized = true; *@
@*         // await JS.InvokeVoidAsync("initLogin"); Chạy JS sau khi trang load *@
@*     } *@


@*     async Task LoginViaGoogle() *@
@*     { *@
@*         Console.WriteLine("Bắt đầu chuyển hướng đến Google..."); *@

@*         var authUrl = $"https://accounts.google.com/o/oauth2/v2/auth" + *@
@*               $"?response_type=code" + *@
@*               $"&client_id={GGclientId}" + *@
@*               $"&redirect_uri={GGredirectUri}" + *@
@*               $"&scope=openid%20email%20profile" + *@
@*               $"&state=xyz" + *@
@*               $"&prompt=select_account"; *@

@*         Console.WriteLine($"URL chuyển hướng: {authUrl}"); *@
@*         Navigation.NavigateTo(authUrl, forceLoad: true); // Chuyển hướng đến Google *@
@*     } *@

@*     async Task LoginViaFacebook() *@
@*     { *@
@*         var authUrl = $"https://www.facebook.com/v22.0/dialog/oauth" + *@
@*               $"?client_id={FBAppId}" + *@
@*               $"&redirect_uri={FBredirectUri}" + *@
@*               $"&scope=email" + *@
@*               $"&response_type=code"; *@
@*         Navigation.NavigateTo(authUrl, forceLoad: true); *@
@*     } *@

@*     async Task LoginViaPassword() *@
@*     { *@
@*         if (string.IsNullOrEmpty(email) || string.IsNullOrEmpty(password)) *@
@*         { *@
@*             message = "Vui lòng nhập email và mật khẩu."; *@
@*             return; *@
@*         } *@

@*         var loginRequest = new { LoginType = "password", Credential = $"{email}|{password}" }; *@
@*         var apiUrl = "https://localhost:7000/api/auth/login"; *@
@*         var response = await Http.PostAsJsonAsync(apiUrl, loginRequest); *@

@*         if (response.IsSuccessStatusCode) *@
@*         { *@
@*             var authResponse = await response.Content.ReadFromJsonAsync<AuthResponse>(); *@
@*             if (authResponse != null) *@
@*             { *@
@*                 await JS.InvokeVoidAsync("localStorage.setItem", "accessToken", authResponse.accessToken); *@
@*                 await JS.InvokeVoidAsync("localStorage.setItem", "refreshToken", authResponse.refreshToken); *@
@*                 message = "Đăng nhập thành công!"; *@
@*                 Navigation.NavigateTo("/"); *@
@*             } *@
@*         } *@
@*         else *@
@*         { *@
@*             var errorContent = await response.Content.ReadAsStringAsync(); *@
@*             message = $"Đăng nhập thất bại: {errorContent}"; *@
@*         } *@
@*     } *@
@* } *@
@page "/login"
@using Shared.Auth
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JS

<style>
    .login-container {
        max-width: 400px;
        margin: 50px auto;
        padding: 20px;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    h3, h4 {
        text-align: center;
        color: #333;
        margin-bottom: 20px;
    }

    .social-buttons {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-bottom: 20px;
    }

    button {
        padding: 12px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        transition: all 0.3s ease;
        color: white;
    }

        button:hover {
            opacity: 0.9;
            transform: translateY(-2px);
        }

        button.google-btn {
            background: linear-gradient(45deg, #4285f4 0%, #34a853 100%);
        }

        button.facebook-btn {
            background: linear-gradient(45deg, #3b5998 0%, #8b9dc3 100%);
        }

    .email-password-form {
        margin-top: 20px;
    }

    input[type="email"],
    input[type="password"] {
        width: 100%;
        padding: 12px;
        margin: 10px 0;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-sizing: border-box;
        font-size: 14px;
        transition: border-color 0.3s ease;
        background: rgba(255, 255, 255, 0.9);
    }

        input[type="email"]:focus,
        input[type="password"]:focus {
            border-color: #4285f4;
            outline: none;
            box-shadow: 0 0 5px rgba(66, 133, 244, 0.3);
        }

    button.login-btn {
        width: 100%;
        background: linear-gradient(45deg, #4CAF50 0%, #81C784 100%);
        margin-top: 10px;
    }

    p.message {
        margin-top: 15px;
        text-align: center;
        color: #666;
    }

        p.message.error {
            color: #d32f2f;
        }

    p.register-link {
        text-align: center;
        margin-top: 20px;
    }

    a {
        color: #4285f4;
        text-decoration: none;
    }

        a:hover {
            text-decoration: underline;
        }

   

    }
</style>

<div class="login-container">
    <h3>Đăng nhập bằng Google hoặc Facebook</h3>
    <div class="social-buttons">
        <button class="google-btn" @onclick="LoginViaGoogle">Đăng nhập bằng Google</button>
        <button class="facebook-btn" @onclick="LoginViaFacebook">Đăng nhập bằng Facebook</button>
    </div>

    <div class="email-password-form">
        <h4>Đăng nhập bằng Email và Mật khẩu</h4>
        <input type="email" @bind="email" placeholder="Email" />
        <input type="password" @bind="password" placeholder="Mật khẩu" />
        <button class="login-btn" @onclick="LoginViaPassword">Đăng nhập</button>
        <p class="message @(message.Contains("thất bại") ? "error" : "")">@message</p>
    </div>

    <p class="register-link">Chưa có tài khoản? <a href="/register">Đăng ký ngay</a></p>
</div>

@code {
    private bool _isInitialized = false;
    private string GGclientId = "568380109802-dtu6hse617l9bs7dg0tn9me2fl3tvau4.apps.googleusercontent.com";
    private string GGredirectUri = "https://localhost:7000/google-callback";
    private string FBredirectUri = "https://localhost:7000/facebook-callback";
    private string FBAppId = "1293858475171011";
    private string email = "";
    private string password = "";
    private string message = "";

    protected async override Task OnInitializedAsync()
    {
        _isInitialized = true;
        // await JS.InvokeVoidAsync("initLogin"); Chạy JS sau khi trang load
    }

    async Task LoginViaGoogle()
    {
        Console.WriteLine("Bắt đầu chuyển hướng đến Google...");
        var authUrl = $"https://accounts.google.com/o/oauth2/v2/auth" +
              $"?response_type=code" +
              $"&client_id={GGclientId}" +
              $"&redirect_uri={GGredirectUri}" +
              $"&scope=openid%20email%20profile" +
              $"&state=xyz" +
              $"&prompt=select_account";
        Console.WriteLine($"URL chuyển hướng: {authUrl}");
        Navigation.NavigateTo(authUrl, forceLoad: true);
    }

    async Task LoginViaFacebook()
    {
        var authUrl = $"https://www.facebook.com/v22.0/dialog/oauth" +
              $"?client_id={FBAppId}" +
              $"&redirect_uri={FBredirectUri}" +
              $"&scope=email" +
              $"&response_type=code";
        Navigation.NavigateTo(authUrl, forceLoad: true);
    }

    async Task LoginViaPassword()
    {
        if (string.IsNullOrEmpty(email) || string.IsNullOrEmpty(password))
        {
            message = "Vui lòng nhập email và mật khẩu.";
            return;
        }

        var loginRequest = new { LoginType = "password", Credential = $"{email}|{password}" };
        var apiUrl = "https://localhost:7000/api/auth/login";
        var response = await Http.PostAsJsonAsync(apiUrl, loginRequest);

        if (response.IsSuccessStatusCode)
        {
            var authResponse = await response.Content.ReadFromJsonAsync<AuthResponse>();
            if (authResponse != null)
            {
                await JS.InvokeVoidAsync("localStorage.setItem", "accessToken", authResponse.accessToken);
                await JS.InvokeVoidAsync("localStorage.setItem", "refreshToken", authResponse.refreshToken);
                message = "Đăng nhập thành công!";
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            var errorContent = await response.Content.ReadAsStringAsync();
            message = $"Đăng nhập thất bại: {errorContent}";
        }
    }
}