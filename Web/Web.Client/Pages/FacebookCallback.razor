@page "/facebook-callback"
@using Microsoft.AspNetCore.WebUtilities
@using Blazored.LocalStorage
@using Shared.Auth
@using System.Text.Json
@inject NavigationManager Navigation
@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject IConfiguration Configuration

<h3>Đang xử lý đăng nhập từ Facebook...</h3>

@code {
    protected override async Task OnInitializedAsync()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("code", out var code))
        {
            var appId = Configuration["Authentication:Facebook:AppId"];
            var appSecret = Configuration["Authentication:Facebook:AppSecret"];
            var redirectUri = "https://localhost:7000/facebook-callback";
            var tokenUrl = $"https://graph.facebook.com/v22.0/oauth/access_token" +
                          $"?client_id={appId}" +
                          $"&redirect_uri={redirectUri}" +
                          $"&client_secret={appSecret}" +
                          $"&code={code}";

            var tokenResponse = await Http.GetAsync(tokenUrl);
            if (tokenResponse.IsSuccessStatusCode)
            {
                var tokenJson = await tokenResponse.Content.ReadAsStringAsync();
                using var tokenDoc = JsonDocument.Parse(tokenJson);
                var accessToken = tokenDoc.RootElement.GetProperty("access_token").GetString();

                var loginRequest = new { LoginType = "facebook", Credential = accessToken };
                var apiUrl = "https://localhost:7000/api/auth/login";
                var response = await Http.PostAsJsonAsync(apiUrl, loginRequest);

                if (response.IsSuccessStatusCode)
                {
                    var authResponse = await response.Content.ReadFromJsonAsync<AuthResponse>();
                    if (authResponse is not null)
                    {
                        await LocalStorage.SetItemAsync("accessToken", authResponse.accessToken);
                        await LocalStorage.SetItemAsync("refreshToken", authResponse.refreshToken);
                        Navigation.NavigateTo("/");
                        return;
                    }
                }
            }
        }

        Navigation.NavigateTo("/login");
    }
}